# Dockerfile for FastAPI Backend
# This builds the Python backend service

# Use Python 3.11 slim image as base
FROM python:3.11-slim

# Set working directory inside container
WORKDIR /app

# Set environment variables
# Prevents Python from writing .pyc files
ENV PYTHONDONTWRITEBYTECODE=1
# Prevents Python from buffering stdout and stderr
ENV PYTHONUNBUFFERED=1

# Install system dependencies
# Required for some Python packages
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements file first
# This allows Docker to cache this layer if requirements don't change
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy the entire application code
COPY . .

# Expose port 8000 for the FastAPI server
EXPOSE 8000

# Health check to verify service is running
# Checks the health endpoint every 30 seconds
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/py/health')"

# Run the FastAPI application using uvicorn
# Host 0.0.0.0 allows external connections
# Timeout settings handle long-running LLM requests
CMD ["uvicorn", "api.index:app", "--host", "0.0.0.0", "--port", "8000", "--timeout-keep-alive", "300"]

